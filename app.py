# -*- coding: utf-8 -*-
"""Batch 18-Data Science Case Study

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fKE323mjVdzs-S0dBo4ltTOnlHbjRQBF
"""

!pip install plotly
!pip install pandas
!pip install seaborn
!pip install matplotlib
!pip install openpyxl

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go

sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (12,8)

print("Libraries installed and imported successfully! ‚úÖ")

# Download all files from GitHub
!wget -O litreacy.XLSX https://raw.githubusercontent.com/Vishv-D/DataScience_Batch_18/main/litreacy.XLSX
!wget -O GDP.XLSX https://raw.githubusercontent.com/Vishv-D/DataScience_Batch_18/main/GDP.XLSX
!wget -O fertility.XLSX https://raw.githubusercontent.com/Vishv-D/DataScience_Batch_18/main/fertility.XLSX
!wget -O population.csv https://raw.githubusercontent.com/Vishv-D/DataScience_Batch_18/main/state%20wise%20pop.csv

import pandas as pd

literacy_raw = pd.read_excel('litreacy.XLSX', engine='openpyxl')

literacy_df = literacy_raw.iloc[3:, :]

literacy_df = literacy_df.drop(literacy_df.columns[0], axis=1)
literacy_df.columns = ['State/UT', '1951', '1961', '1971', '1981', '1991', '2001', '2011']

literacy_df = literacy_df.dropna(subset=['State/UT'])

literacy_df = literacy_df.reset_index(drop=True)

print("‚úÖ Literacy data cleaned!")
display(literacy_df.head())

gdp_raw = pd.read_excel('GDP.XLSX', engine='openpyxl')

gdp_df = gdp_raw.iloc[4:, :]

if 'Unnamed: 0' in gdp_df.columns:
    gdp_df = gdp_df.drop('Unnamed: 0', axis=1)
gdp_df.columns = ['State/UT', '2004-05', '2005-06', '2006-07', '2007-08', '2008-09']

gdp_df = gdp_df.dropna(subset=['State/UT'])

gdp_df = gdp_df.reset_index(drop=True)

print("‚úÖ GDP data cleaned!")
display(gdp_df.head())

fertility_raw = pd.read_excel('fertility.XLSX', engine='openpyxl')

fertility_df = fertility_raw.iloc[2:, :]

if 'Unnamed: 0' in fertility_df.columns:
    fertility_df = fertility_df.drop('Unnamed: 0', axis=1)

fertility_df.columns = ['State/UT', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011']

fertility_df = fertility_df.dropna(subset=['State/UT'])

fertility_df = fertility_df.reset_index(drop=True)

print("Fertility data cleaned!")
display(fertility_df.head())

population_df = pd.read_csv('state wise pop.csv')

print("Population data loaded!")
display(population_df.head())

print("üìö Literacy Data:")
literacy_df.info()
display(literacy_df.describe())

print("\nüí∞ GDP Data:")
gdp_df.info()
display(gdp_df.describe())

print("\nüçº Fertility Data:")
fertility_df.info()
display(fertility_df.describe())

print("\nüè° Population Data:")
population_df.info()
display(population_df.describe())

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

sns.set_theme(style="whitegrid")

print("üìö Literacy Data Info:")
literacy_df.info()
display(literacy_df.describe())

print("\nüí∞ GDP Data Info:")
gdp_df.info()
display(gdp_df.describe())

print("\nüçº Fertility Data Info:")
fertility_df.info()
display(fertility_df.describe())

print("\nüè° Population Data Info:")
population_df.info()
display(population_df.describe())

plt.figure(figsize=(14, 6))

for year in ['1951', '1961', '1971', '1981', '1991', '2001', '2011']:
    literacy_df[year] = pd.to_numeric(literacy_df[year], errors='coerce')

for index, row in literacy_df.iterrows():
    years = ['1951', '1961', '1971', '1981', '1991', '2001', '2011']
    values = row[years].values
    plt.plot(years, values, label=row['State/UT'])

plt.title('üìö Literacy Rate Trends Across States')
plt.xlabel('Year')
plt.ylabel('Literacy Rate (%)')
plt.xticks(rotation=45)
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', ncol=2, fontsize='small')
plt.show()

plt.figure(figsize=(14, 6))

for year in ['2004-05', '2005-06', '2006-07', '2007-08', '2008-09']:
    gdp_df[year] = pd.to_numeric(gdp_df[year], errors='coerce')

for index, row in gdp_df.iterrows():
    years = ['2004-05', '2005-06', '2006-07', '2007-08', '2008-09']
    values = row[years].values
    plt.plot(years, values, label=row['State/UT'])

plt.title('üí∞ GDP Trends Across States')
plt.xlabel('Year')
plt.ylabel('GDP (Rs. Crore)')
plt.xticks(rotation=45)
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', ncol=2, fontsize='small')
plt.show()

plt.figure(figsize=(14, 6))

for year in ['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011']:
    fertility_df[year] = pd.to_numeric(fertility_df[year], errors='coerce')

for index, row in fertility_df.iterrows():
    years = ['2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011']
    values = row[years].values
    plt.plot(years, values, label=row['State/UT'])

plt.title('üçº Fertility Rate Trends Across States')
plt.xlabel('Year')
plt.ylabel('Fertility Rate (Children per Woman)')
plt.xticks(rotation=45)
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', ncol=2, fontsize='small')
plt.show()

combined_df = pd.DataFrame()
combined_df['State/UT'] = literacy_df['State/UT']
combined_df['Literacy_2011'] = literacy_df['2011']
combined_df['GDP_2008-09'] = gdp_df['2008-09']
combined_df['Fertility_2011'] = fertility_df['2011']

combined_df = combined_df.dropna()

corr = combined_df[['Literacy_2011', 'GDP_2008-09', 'Fertility_2011']].corr()

plt.figure(figsize=(8, 6))
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('üî• Correlation between Literacy, GDP and Fertility')
plt.show()

# Interactive Scatter Plot
fig = px.scatter(
    combined_df,
    x='Literacy_2011',
    y='GDP_2008-09',
    color='Fertility_2011',
    size='GDP_2008-09',
    hover_name='State/UT',
    title='üí¨ Interactive GDP vs Literacy vs Fertility'
)
fig.show()

print("üìö Literacy Data:")
display(literacy_df.describe(include='all'))
print("\nüí∞ GDP Data:")
display(gdp_df.describe(include='all'))
print("\nüçº Fertility Data:")
display(fertility_df.describe(include='all'))
print("\nüè° Population Data:")
display(population_df.describe(include='all'))

print("\nüîé Missing Values per Dataset:")
print("Literacy Missing:\n", literacy_df.isnull().sum())
print("GDP Missing:\n", gdp_df.isnull().sum())
print("Fertility Missing:\n", fertility_df.isnull().sum())
print("Population Missing:\n", population_df.isnull().sum())

for year in ['1951', '1961', '1971', '1981', '1991', '2001', '2011']:
    literacy_df[year] = pd.to_numeric(literacy_df[year], errors='coerce')

plt.figure(figsize=(14, 8))
for i, row in literacy_df.iterrows():
    plt.plot(['1951', '1961', '1971', '1981', '1991', '2001', '2011'],
             row[['1951', '1961', '1971', '1981', '1991', '2001', '2011']].interpolate(), label=row['State/UT'])

plt.title('üìö Smooth Literacy Trends Across States')
plt.xlabel('Year')
plt.ylabel('Literacy Rate (%)')
plt.xticks(rotation=45)
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', fontsize='small')
plt.show()

top5_literacy = literacy_df[['State/UT', '2011']].sort_values('2011', ascending=False).head(5)
bottom5_literacy = literacy_df[['State/UT', '2011']].sort_values('2011', ascending=True).head(5)

plt.figure(figsize=(12,6))
sns.barplot(x='2011', y='State/UT', data=top5_literacy, palette='viridis')
plt.title('üèÜ Top 5 States by Literacy Rate (2011)')
plt.xlabel('Literacy Rate (%)')
plt.show()

plt.figure(figsize=(12,6))
sns.barplot(x='2011', y='State/UT', data=bottom5_literacy, palette='magma')
plt.title('üö´ Bottom 5 States by Literacy Rate (2011)')
plt.xlabel('Literacy Rate (%)')
plt.show()

population_df.columns = population_df.columns.str.strip()

population_df = population_df.rename(columns={
    'population(2011)': 'Population'
})

combined_df = pd.merge(
    literacy_df[['State/UT', '2011']],
    gdp_df[['State/UT', '2008-09']],
    on='State/UT'
)

combined_df = pd.merge(
    combined_df,
    population_df[['State/UT', 'Population']],
    on='State/UT'
)

combined_df.columns = ['State/UT', 'Literacy_2011', 'GDP_2008-09', 'Population']

combined_df = combined_df.dropna()

import plotly.express as px

fig = px.scatter_3d(
    combined_df,
    x='Literacy_2011',
    y='GDP_2008-09',
    z='Population',
    text='State/UT',
    color='Literacy_2011',
    size='GDP_2008-09',
    title='üìöüí∞üßë‚Äçü§ù‚Äçüßë 3D View: Literacy vs GDP vs Population (State-wise)',
    template='plotly_dark'
)
fig.show()

import seaborn as sns
import matplotlib.pyplot as plt

correlation_matrix = combined_df[['Literacy_2011', 'GDP_2008-09', 'Population']].corr()

plt.figure(figsize=(8, 6))
sns.heatmap(
    correlation_matrix,
    annot=True,
    cmap='coolwarm',
    fmt='.2f',
    linewidths=0.5
)
plt.title('üîó Correlation Heatmap: Literacy vs GDP vs Population', fontsize=16)
plt.show()

sns.pairplot(
    combined_df[['Literacy_2011', 'GDP_2008-09', 'Population']],
    kind='reg',
    plot_kws={'line_kws':{'color':'red'}}
)
plt.suptitle('üìä Pairplot: Relationships among Literacy, GDP, and Population', y=1.02)
plt.show()

import plotly.express as px
fig = px.scatter(
    combined_df,
    x='GDP_2008-09',
    y='Literacy_2011',
    size='Population',
    color='Literacy_2011',
    hover_name='State/UT',
    size_max=100,
    color_continuous_scale='Viridis',
    title='üìà Literacy vs GDP with Population Size (State-wise)',
)
fig.update_layout(
    xaxis_title='GDP (2008-09)',
    yaxis_title='Literacy Rate (2011)',
    template='plotly_white',
    plot_bgcolor='rgba(0,0,0,0)',
    paper_bgcolor='rgba(0,0,0,0)',
    font=dict(size=14)
)
fig.show()

literacy_df.to_csv('cleaned_literacy.csv', index=False)
gdp_df.to_csv('cleaned_gdp.csv', index=False)
population_df.to_csv('cleaned_population.csv', index=False)

from google.colab import files

files.download('cleaned_literacy.csv')
files.download('cleaned_gdp.csv')
files.download('cleaned_population.csv')
